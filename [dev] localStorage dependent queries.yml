version: 43.0.9
pageUuid: e7d1dbd2-e9a7-11eb-9317-1ba43a02b8cd
appTemplate:
  plugins:
    ordered:
      - keyOneQuery:
          pluginTemplate:
            id: keyOneQuery
            type: datasource
            subtype: SqlTransformQuery
            resourceName: SQL Transforms
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: latest
                - resourceNameOverride: ''
                - runWhenModelUpdates: true
                - showFailureToaster: true
                - query: select {{ localStorage.values.keyOne }}
                - playgroundQueryUuid: ''
                - playgroundQueryId: null
                - privateParams: []
                - triggersOnSuccess:
                    - setQueryOneRun
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure: []
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events:
                    - ordered:
                        - event: success
                        - type: datasource
                        - method: trigger
                        - pluginId: setQueryOneRun
                        - params:
                            ordered: []
                        - waitType: debounce
                        - waitMs: '0'
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2021-07-20T20:48:42.970Z
      - text1:
          pluginTemplate:
            id: text1
            type: widget
            subtype: TextWidget2
            template:
              ordered:
                - heightType: auto
                - horizontalAlign: left
                - hidden: false
                - imageWidth: fit
                - verticalAlign: center
                - tooltipText: ''
                - value: |-
                    query one run count: {{ queryOneRunCount.value }}

                    query two run count: {{ queryTwoRunCount.value }}
                - disableMarkdown: false
                - overflowType: scroll
            style:
              ordered: []
            position2:
              position2:
                row: 1.4
                col: 1
                height: 0.6
                width: 3
            createdAt: 2021-07-20T20:48:59.738Z
      - button1:
          pluginTemplate:
            id: button1
            type: widget
            subtype: ButtonWidget2
            template:
              ordered:
                - hidden: false
                - disabled: false
                - iconAfter: ''
                - iconBefore: ''
                - loading: false
                - text: Run query one
                - tooltipText: ''
                - events:
                    - ordered:
                        - event: click
                        - type: datasource
                        - method: trigger
                        - pluginId: setKeyOne
                        - params:
                            ordered: []
                        - waitType: debounce
                        - waitMs: '0'
            style:
              ordered: []
            position2:
              position2:
                row: 3
                col: 5
                height: 1
                width: 3
            createdAt: 2021-07-20T20:50:04.617Z
      - keyTwoQuery:
          pluginTemplate:
            id: keyTwoQuery
            type: datasource
            subtype: SqlTransformQuery
            resourceName: SQL Transforms
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: latest
                - resourceNameOverride: ''
                - runWhenModelUpdates: true
                - showFailureToaster: true
                - query: select {{ localStorage.values.keyTwo }}
                - playgroundQueryUuid: ''
                - playgroundQueryId: null
                - privateParams: []
                - triggersOnSuccess:
                    - setQueryTwoRun
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure: []
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events:
                    - ordered:
                        - event: success
                        - type: datasource
                        - method: trigger
                        - pluginId: setQueryTwoRun
                        - params:
                            ordered: []
                        - waitType: debounce
                        - waitMs: '0'
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2021-07-20T20:50:18.519Z
      - setKeyOne:
          pluginTemplate:
            id: setKeyOne
            type: datasource
            subtype: JavascriptQuery
            resourceName: JavascriptQuery
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: latest
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: localStorage.setValue('keyOne', 'KEY_ONE_IS_SET')
                - playgroundQueryUuid: ''
                - playgroundQueryId: null
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure: []
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2021-07-20T20:50:37.752Z
      - setKeyTwo:
          pluginTemplate:
            id: setKeyTwo
            type: datasource
            subtype: JavascriptQuery
            resourceName: JavascriptQuery
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: latest
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: localStorage.setValue('keyTwo', 'KEY_TWO_IS_SET')
                - playgroundQueryUuid: ''
                - playgroundQueryId: null
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure: []
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2021-07-20T20:51:10.119Z
      - clearValues:
          pluginTemplate:
            id: clearValues
            type: datasource
            subtype: JavascriptQuery
            resourceName: JavascriptQuery
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: latest
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: |
                    localStorage.clear();
                    queryOneRunCount.setValue(0);
                    queryTwoRunCount.setValue(0);
                - playgroundQueryUuid: ''
                - playgroundQueryId: null
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure: []
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2021-07-20T20:51:24.520Z
      - button2:
          pluginTemplate:
            id: button2
            type: widget
            subtype: ButtonWidget2
            template:
              ordered:
                - hidden: false
                - disabled: false
                - iconAfter: ''
                - iconBefore: ''
                - loading: false
                - text: Run query two
                - tooltipText: ''
                - events:
                    - ordered:
                        - event: click
                        - type: datasource
                        - method: trigger
                        - pluginId: setKeyTwo
                        - params:
                            ordered: []
                        - waitType: debounce
                        - waitMs: '0'
            style:
              ordered: []
            position2:
              position2:
                row: 4
                col: 5
                height: 1
                width: 3
            createdAt: 2021-07-20T20:51:34.692Z
      - button3:
          pluginTemplate:
            id: button3
            type: widget
            subtype: ButtonWidget2
            template:
              ordered:
                - iconAfter: ''
                - hidden: false
                - text: Reset
                - tooltipText: ''
                - style:
                    ordered:
                      - background: '#ebbcb7ff'
                - iconBefore: ''
                - events:
                    - ordered:
                        - event: click
                        - type: datasource
                        - method: trigger
                        - pluginId: clearValues
                        - params:
                            ordered: []
                        - waitType: debounce
                        - waitMs: '0'
                - loading: false
                - disabled: false
            style:
              ordered: []
            position2:
              position2:
                row: 1.6
                col: 5
                height: 1
                width: 3
            createdAt: 2021-07-20T20:51:52.721Z
      - queryOneRunCount:
          pluginTemplate:
            id: queryOneRunCount
            type: state
            subtype: State
            template:
              ordered:
                - value: '0'
            createdAt: 2021-07-20T20:54:17.144Z
      - queryTwoRunCount:
          pluginTemplate:
            id: queryTwoRunCount
            type: state
            subtype: State
            template:
              ordered:
                - value: '0'
            createdAt: 2021-07-20T20:54:32.163Z
      - setQueryOneRun:
          pluginTemplate:
            id: setQueryOneRun
            type: datasource
            subtype: JavascriptQuery
            resourceName: JavascriptQuery
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: latest
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: >-
                    queryOneRunCount.setValue(parseInt(queryOneRunCount.value) +
                    1);
                - playgroundQueryUuid: ''
                - playgroundQueryId: null
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure: []
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2021-07-20T20:59:12.336Z
      - setQueryTwoRun:
          pluginTemplate:
            id: setQueryTwoRun
            type: datasource
            subtype: JavascriptQuery
            resourceName: JavascriptQuery
            template:
              ordered:
                - queryRefreshTime: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: latest
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: >-
                    queryTwoRunCount.setValue(parseInt(queryTwoRunCount.value) +
                    1);
                - playgroundQueryUuid: ''
                - playgroundQueryId: null
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure: []
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - enableCaching: false
                - allowedGroups: []
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2021-07-20T20:59:45.294Z
      - text2:
          pluginTemplate:
            id: text2
            type: widget
            subtype: TextWidget2
            template:
              ordered:
                - heightType: auto
                - horizontalAlign: left
                - hidden: false
                - imageWidth: fit
                - verticalAlign: center
                - tooltipText: ''
                - value: |-
                    Press **Reset** to reset all state

                    Pressing "Run query one" should ONLY run query one

                    Pressing "Run query two" should ONLY run query two
                - disableMarkdown: false
                - overflowType: scroll
            style:
              ordered: []
            position2:
              position2:
                row: 1.6
                col: 8
                height: 0.6
                width: 3
            createdAt: 2021-07-20T21:53:47.217Z
  rootScreen: null
  version: 2.72.17
