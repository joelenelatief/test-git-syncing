version: 43.0.9
pageUuid: 52790acc-6962-11ea-ae82-3f9ecba7fd2c
appTemplate:
  plugins:
    ordered:
      - limitOffsetData:
          pluginTemplate:
            id: limitOffsetData
            type: datasource
            subtype: SqlQuery
            resourceName: '[dev] internal_retool (readonly)'
            template:
              ordered:
                - queryRefreshTime: ''
                - databasePasswordOverride: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: true
                - query: |-
                    with fruits as (
                      select * from (VALUES (1, 'Pineapple'), (2, 'Cherry'), (3, 'Grape'), (4, 'Orange'), (5, 'Watermelon'), (6, 'Tangerine'), (7,'Tomato'), (8, 'Kiwi'), (9, 'Blueberry'), (10,'Blackberry'), (11, 'Grapefruit'), (12, 'Apricot')) as t(id, name)
                    )
                    select
                      *
                    from
                      fruits
                    limit
                      {{ table1.pageSize }} offset {{ table1.paginationOffset }}
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - warningCodes: []
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - dataArray: []
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure: []
                - shouldUseLegacySql: false
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - databaseNameOverride: ''
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - queryTimeout: '10001'
                - requireConfirmation: false
                - enableCaching: false
                - databaseUsernameOverride: ''
                - shouldEnableBatchQuerying: false
                - queryThrottleTime: '750'
                - notificationDuration: ''
            createdAt: 2020-03-18T21:49:22.525Z
      - table1:
          pluginTemplate:
            id: table1
            type: widget
            subtype: TableWidget
            template:
              ordered:
                - showCustomButton: false
                - sortMappedValue:
                    ordered: []
                - normalizedData: null
                - saveChangesDisabled: ''
                - columnWidths: []
                - columnWidthsMobile: []
                - hasNextAfterCursor: ''
                - columnTypeSpecificExtras:
                    ordered: []
                - onRowAdded: ''
                - columnHeaderNames:
                    ordered: []
                - alwaysShowPaginator: false
                - columnColors:
                    ordered:
                      - folderId: ''
                      - name: ''
                      - deletedAt: ''
                      - organizationId: ''
                      - updatedAt: ''
                      - releasedTagId: ''
                      - id: ''
                      - createdAt: ''
                      - uuid: ''
                      - photoUrl: ''
                - allowMultiRowSelect: false
                - columnFormats:
                    ordered: []
                - columnRestrictedEditing:
                    ordered: []
                - showFilterButton: true
                - nextBeforeCursor: ''
                - columnVisibility:
                    ordered:
                      - folderId: true
                      - name: true
                      - Sales: true
                      - deletedAt: true
                      - organizationId: true
                      - updatedAt: true
                      - Title: true
                      - releasedTagId: true
                      - id: true
                      - createdAt: true
                      - uuid: true
                      - Description: true
                      - photoUrl: true
                - selectedPageIndex: '0'
                - actionButtonColumnName: Actions
                - filterStackType: and
                - downloadRawData: false
                - showFetchingIndicator: true
                - serverPaginated: true
                - data: '{{ limitOffsetData.data }}'
                - displayedData: null
                - actionButtons: []
                - actionButtonSelectsRow: true
                - selectRowByDefault: true
                - defaultSortByColumn: ''
                - paginationOffset: 0
                - columnAlignment:
                    ordered: []
                - sortedDesc: false
                - customButtonName: ''
                - columnMappersRenderAsHTML:
                    ordered: []
                - pageSize: 5
                - useDynamicColumnSettings: false
                - actionButtonPosition: left
                - bulkUpdateAction: ''
                - afterCursor: ''
                - onCustomButtonPressQueryName: ''
                - changeSet:
                    object: {}
                - sortedColumn: ''
                - columnAllowOverflow:
                    ordered: []
                - beforeCursor: ''
                - serverPaginationType: limitOffsetBased
                - onRowSelect: ''
                - showDownloadButton: true
                - selectedIndex: ''
                - defaultSortDescending: false
                - dynamicColumnSettings: null
                - totalRowCount: '{{ limitOffsetCount.data.count[0]}}'
                - recordUpdates:
                    ordered:
                      - array: []
                - newRow: null
                - columnEditable:
                    ordered: []
                - filters:
                    ordered:
                      - array: []
                - displayedDataIndices: null
                - disableSorting:
                    ordered: []
                - columnMappers:
                    ordered: []
                - showClearSelection: false
                - selectedCell:
                    object:
                      index: null
                      data: null
                      columnName: null
                - columns:
                    - Title
                    - Description
                    - Sales
                    - id
                    - name
                    - createdAt
                    - updatedAt
                    - organizationId
                    - folderId
                    - uuid
                    - releasedTagId
                    - photoUrl
                    - deletedAt
                - sort: null
                - calculatedColumns: []
                - selectedRow:
                    object:
                      index: null
                      data: null
                - showPaginationOnTop: false
                - nextAfterCursor: ''
                - useCompactMode: false
            position2:
              position2:
                row: 1
                height: 7
                width: 12
            createdAt: 2020-03-18T21:49:38.445Z
      - limitOffsetCount:
          pluginTemplate:
            id: limitOffsetCount
            type: datasource
            subtype: SqlQuery
            resourceName: '[dev] internal_retool (readonly)'
            template:
              ordered:
                - queryRefreshTime: ''
                - databasePasswordOverride: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: true
                - query: |-
                    with fruits as (
                      select * from (VALUES (1, 'Pineapple'), (2, 'Cherry'), (3, 'Grape'), (4, 'Orange'), (5, 'Watermelon'), (6, 'Tangerine'), (7,'Tomato'), (8, 'Kiwi'), (9, 'Blueberry'), (10,'Blackberry'), (11, 'Grapefruit'), (12, 'Apricot')) as t(id, name)
                    )
                    select
                      count(*)
                    from
                      fruits
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - warningCodes: []
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - dataArray: []
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure: []
                - shouldUseLegacySql: false
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - databaseNameOverride: ''
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - queryTimeout: '10000'
                - requireConfirmation: false
                - enableCaching: false
                - databaseUsernameOverride: ''
                - shouldEnableBatchQuerying: false
                - queryThrottleTime: '750'
                - notificationDuration: ''
            createdAt: 2020-03-18T21:49:47.734Z
      - forwardCursorData:
          pluginTemplate:
            id: forwardCursorData
            type: datasource
            subtype: SqlQuery
            resourceName: '[dev] internal_retool (readonly)'
            template:
              ordered:
                - queryRefreshTime: ''
                - databasePasswordOverride: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: 0
                - resourceNameOverride: ''
                - runWhenModelUpdates: true
                - query: |-
                    with fruits as (
                      select
                        *
                      from
                        (
                          VALUES
                            (1, 'Pineapple'),
                            (2, 'Cherry'),
                            (3, 'Grape'),
                            (4, 'Orange'),
                            (5, 'Watermelon'),
                            (6, 'Tangerine'),
                            (7, 'Tomato'),
                            (8, 'Kiwi'),
                            (9, 'Blueberry'),
                            (10, 'Blackberry'),
                            (11, 'Grapefruit'),
                            (12, 'Apricot')
                        ) as t(id, name)
                    )
                    select
                      *
                    from
                      fruits
                    where
                      name ilike {{ '%' + textinput1.value + '%' }}
                      and id > {{ table2.afterCursor || 0}}
                    limit 4
                - playgroundQueryUuid: ''
                - playgroundQueryId: 0
                - privateParams: []
                - triggersOnSuccess: []
                - runWhenPageLoadsDelay: ''
                - warningCodes: []
                - data: null
                - importedQueryInputs:
                    ordered: []
                - showSuccessConfetti: false
                - isImported: false
                - showSuccessToaster: true
                - dataArray: []
                - cacheKeyTtl: ''
                - metadata: null
                - triggersOnFailure: []
                - shouldUseLegacySql: false
                - errorTransformer: |-
                    // type your code here
                    // example: return data.find(element => element.isError)
                    return data.error
                - databaseNameOverride: ''
                - confirmationMessage: null
                - isFetching: false
                - rawData: null
                - queryTriggerDelay: '0'
                - watchedParams: []
                - enableErrorTransformer: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - queryTimeout: '10000'
                - requireConfirmation: false
                - enableCaching: false
                - databaseUsernameOverride: ''
                - shouldEnableBatchQuerying: false
                - queryThrottleTime: '750'
                - notificationDuration: ''
            createdAt: 2020-03-18T22:51:54.300Z
      - textinput1:
          pluginTemplate:
            id: textinput1
            type: widget
            subtype: TextInputWidget
            template:
              ordered:
                - validationMaxlengthValue: ''
                - readonly: ''
                - disabledKeyCodes: ''
                - validationMaxValue: ''
                - onBlur: ''
                - currencyType: USD
                - leftIconName: ''
                - initialValue: ''
                - validationMessage: ''
                - tooltipText: ''
                - value: ''
                - suffix: ''
                - validationMinlengthValue: ''
                - validationLengthValue: ''
                - placeholder: Search here...
                - validationType: ''
                - label: Name
                - currencyMajorOnly: false
                - formattedValue: ''
                - allowedInputsRegex: ''
                - labelMaxWidth: ''
                - enableValidationType: false
                - labelPlacedOnLeft: false
                - onSubmit: ''
                - validationMinValue: ''
                - validationState:
                    object:
                      required: ''
                      validationType: ''
                - type: text
                - allowedRegex: ''
                - required: false
            position2:
              position2:
                row: 10
                col: 8
                height: 1
                width: 4
            createdAt: 2020-03-18T23:14:16.801Z
      - table2:
          pluginTemplate:
            id: table2
            type: widget
            subtype: TableWidget
            template:
              ordered:
                - showCustomButton: false
                - sortMappedValue:
                    ordered: []
                - normalizedData: null
                - saveChangesDisabled: ''
                - columnWidths: []
                - columnWidthsMobile: []
                - hasNextAfterCursor: ''
                - columnTypeSpecificExtras:
                    ordered: []
                - onRowAdded: ''
                - columnHeaderNames:
                    ordered: []
                - alwaysShowPaginator: false
                - columnColors:
                    ordered:
                      - id: ''
                      - name: ''
                      - count: ''
                - allowMultiRowSelect: false
                - columnFormats:
                    ordered: []
                - columnRestrictedEditing:
                    ordered: []
                - showFilterButton: true
                - nextBeforeCursor: ''
                - columnVisibility:
                    ordered:
                      - id: true
                      - name: true
                      - count: true
                      - Title: true
                      - Description: true
                      - Sales: true
                - selectedPageIndex: '0'
                - actionButtonColumnName: Actions
                - filterStackType: and
                - downloadRawData: false
                - showFetchingIndicator: true
                - serverPaginated: true
                - data: '{{ forwardCursorData.data}}'
                - displayedData: null
                - actionButtons: []
                - actionButtonSelectsRow: true
                - selectRowByDefault: true
                - defaultSortByColumn: ''
                - paginationOffset: 0
                - columnAlignment:
                    ordered: []
                - sortedDesc: false
                - customButtonName: ''
                - columnMappersRenderAsHTML:
                    ordered: []
                - pageSize: 5
                - useDynamicColumnSettings: false
                - actionButtonPosition: left
                - bulkUpdateAction: ''
                - afterCursor: ''
                - onCustomButtonPressQueryName: ''
                - changeSet:
                    object: {}
                - sortedColumn: ''
                - columnAllowOverflow:
                    ordered: []
                - beforeCursor: ''
                - serverPaginationType: forwardCursorBased
                - onRowSelect: ''
                - showDownloadButton: true
                - selectedIndex: ''
                - defaultSortDescending: false
                - dynamicColumnSettings: null
                - totalRowCount: ''
                - recordUpdates:
                    ordered:
                      - array: []
                - newRow: null
                - columnEditable:
                    ordered: []
                - filters:
                    ordered:
                      - array: []
                - displayedDataIndices: null
                - disableSorting:
                    ordered: []
                - columnMappers:
                    ordered: []
                - showClearSelection: false
                - selectedCell:
                    object:
                      index: null
                      data: null
                      columnName: null
                - columns:
                    - Title
                    - Description
                    - Sales
                    - count
                    - id
                    - name
                - sort: null
                - calculatedColumns: []
                - selectedRow:
                    object:
                      index: null
                      data: null
                - showPaginationOnTop: false
                - nextAfterCursor: '{{ _.last(forwardCursorData.data.id)}}'
                - useCompactMode: false
            position2:
              position2:
                row: 11
                height: 7
                width: 12
            createdAt: 2020-03-18T23:14:22.664Z
      - text1:
          pluginTemplate:
            id: text1
            type: widget
            subtype: TextWidget
            template:
              ordered:
                - horizontalAlign: left
                - truncateOverflow: false
                - verticalAlign: center
                - scrollOverflow: false
                - tooltipText: ''
                - value: '## Limit offset'
                - renderAsHtml: false
                - backgroundColor: '#0000'
                - textColor: '#312929'
                - renderAsMarkdown: true
            position2:
              position2:
                height: 1
                width: 3
            createdAt: 2020-03-18T23:15:32.395Z
      - text2:
          pluginTemplate:
            id: text2
            type: widget
            subtype: TextWidget
            template:
              ordered:
                - horizontalAlign: left
                - truncateOverflow: false
                - verticalAlign: center
                - scrollOverflow: false
                - tooltipText: ''
                - value: '## Cursor based'
                - renderAsHtml: false
                - backgroundColor: '#0000'
                - textColor: '#312929'
                - renderAsMarkdown: true
            position2:
              position2:
                row: 10
                height: 1
                width: 3
            createdAt: 2020-03-18T23:15:42.290Z
  rootScreen: null
  version: 2.63.22
